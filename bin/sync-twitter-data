#!/usr/bin/env python

"""A tool to synchronize the *politico* database with Twitter.com."""

import logging
import requests
import urlparse
import urllib

import sqlalchemy

from politico import init_webapp
from politico.model import db, Person, Role, TwitterProfile


logging.basicConfig(level=logging.INFO)
log = logging.getLogger(__name__)


def build_url(resource, query_params):
  """Build a GovTrack.us API url.

  :param resource: The resource path to get, e.g., /api/v2/role or
    /api/v2/person.
  :param query_params: The query parameters as a :class:`dict` to encode with
    :func:`urllib.urlencode`.

  """
  query = urllib.urlencode(query_params)
  return urlparse.urlunparse((
    'https',
    'www.govtrack.us',
    resource,
    None,
    query,
    None,
  ))


def main():

  # We really just want to setup the database context!
  init_webapp()

  for s in db.session.query(Role).filter_by(state='CA').all():
    print 'PERSON:'
    print ' - %s' % s.person.firstname
    print ' - %s' % s.person.lastname
    print ' - %s' % s.state
    print ' - %s' % s.role_type
    print ' - %s' % s.person.twitterid



if __name__ == '__main__':
  main()
